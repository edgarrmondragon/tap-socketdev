name: Test tap-socketdev

on:
  push:
    branches: [main]
    paths:
    - tap_socketdev/**
    - tests/**
    - noxfile.py
    - poetry.lock
    - pyproject.toml
    - .github/workflows/test.yml
    - .github/workflows/constraints.txt
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
    - tap_socketdev/**
    - tests/**
    - noxfile.py
    - poetry.lock
    - pyproject.toml
    - .github/workflows/test.yml
    - .github/workflows/constraints.txt
  workflow_dispatch:
  schedule:
  # Run weekly on Monday at 12:00 PM UTC
  - cron: "0 12 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  # renovate: datasource=pypi depName=nox
  NOX_VERSION: 2024.10.9
  # renovate: datasource=pypi depName=nox-poetry
  NOX_POETRY_VERSION: 1.1.0
  # renovate: datasource=pypi depName=pip
  PIP_VERSION: 25.0
  # renovate: datasource=pypi depName=poetry
  POETRY_VERSION: 2.0.1
  # renovate: datasource=pypi depName=poetry-plugin-export
  POETRY_PLUGIN_EXPORT_VERSION: 1.9.0

jobs:
  test:
    runs-on: ubuntu-24.04
    env:
      NOXPYTHON: ${{ matrix.python-version }}
      NOXSESSION: tests
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        python-version:
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
        cache: pip
        cache-dependency-path: poetry.lock

    - name: Upgrade pip
      run: |
        pip install pip==${{ env.PIP_VERSION }}
        pip --version

    - name: Install Poetry
      run: |
        pipx install poetry==${{ env.POETRY_VERSION }}
        pipx inject poetry poetry-plugin-export==${{ env.POETRY_PLUGIN_EXPORT_VERSION }}
        poetry --version
        poetry self show plugins

    - name: Install Nox
      run: |
        pipx install nox==${{ env.NOX_VERSION }}
        pipx inject nox nox-poetry==${{ env.NOX_POETRY_VERSION }}
        nox --version

    - name: Run tests
      env:
        TAP_SOCKETDEV_API_KEY: ${{ secrets.TAP_SOCKETDEV_API_KEY }}
        TAP_SOCKETDEV_START_DATE: ${{ secrets.TAP_SOCKETDEV_START_DATE }}
      run: |
        nox --verbose

  typing:
    runs-on: ubuntu-24.04
    env:
      NOXSESSION: mypy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        cache: pip
        cache-dependency-path: poetry.lock

    - name: Upgrade pip
      run: |
        pip install pip==${{ env.PIP_VERSION }}
        pip --version

    - name: Install Poetry
      run: |
        pipx install poetry==${{ env.POETRY_VERSION }}
        pipx inject poetry poetry-plugin-export==${{ env.POETRY_PLUGIN_EXPORT_VERSION }}
        poetry --version
        poetry self show plugins

    - name: Install Nox
      run: |
        pipx install nox==${{ env.NOX_VERSION }}
        pipx inject nox nox-poetry==${{ env.NOX_POETRY_VERSION }}
        nox --version

    - name: Run typing checks
      run: |
        nox --verbose
